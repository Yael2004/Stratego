<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abysswatcher_Label" xml:space="preserve">
    <value>Abysswatcher</value>
  </data>
  <data name="Accept_Button" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AccountAlreadyExistMessage_Label" xml:space="preserve">
    <value>This account already exist, try with another</value>
  </data>
  <data name="AccountAlreadyExist_Title" xml:space="preserve">
    <value>Account already exist</value>
  </data>
  <data name="AddFriend_Button" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Apprentice_Button" xml:space="preserve">
    <value>Apprentice</value>
  </data>
  <data name="Archfiend_Label" xml:space="preserve">
    <value>Archfiend</value>
  </data>
  <data name="Cancel_Button" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Casual_Button" xml:space="preserve">
    <value>Casual player</value>
  </data>
  <data name="ChangedPasswordMessage_Label" xml:space="preserve">
    <value>Your password has been changed succesfully</value>
  </data>
  <data name="ChangePassword_Button" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="ChangePassword_Title" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="CheckProfile_Button" xml:space="preserve">
    <value>Check profile</value>
  </data>
  <data name="Code_Label" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Competitive_Button" xml:space="preserve">
    <value>Competitive</value>
  </data>
  <data name="CreateLobby_Button" xml:space="preserve">
    <value>Create lobby</value>
  </data>
  <data name="CurrentPassword_Label" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="DarkKnight_Label" xml:space="preserve">
    <value>DarkKnight</value>
  </data>
  <data name="Darkwraith_Label" xml:space="preserve">
    <value>Darkwraith</value>
  </data>
  <data name="DatabaseConnectionErrorMessage_Label" xml:space="preserve">
    <value>Connection error has ocurred, try again later</value>
  </data>
  <data name="DatabaseConnectionError_Title" xml:space="preserve">
    <value>Connection error</value>
  </data>
  <data name="Defeat_Label" xml:space="preserve">
    <value>Defeat</value>
  </data>
  <data name="FieldsInBlank_Label" xml:space="preserve">
    <value>Some fields are in blank</value>
  </data>
  <data name="FriendRequestMessage_Label" xml:space="preserve">
    <value>Sent request to</value>
  </data>
  <data name="Friends_Title" xml:space="preserve">
    <value>Friends</value>
  </data>
  <data name="FullLobby_Label" xml:space="preserve">
    <value>Lobby is full</value>
  </data>
  <data name="GamesLost_Label" xml:space="preserve">
    <value>Games lost</value>
  </data>
  <data name="GamesPlayed_Label" xml:space="preserve">
    <value>Games played</value>
  </data>
  <data name="GamesWon_Label" xml:space="preserve">
    <value>Games won</value>
  </data>
  <data name="GrimReaper_Label" xml:space="preserve">
    <value>GrimReaper</value>
  </data>
  <data name="Hellhound_Label" xml:space="preserve">
    <value>Hellhound</value>
  </data>
  <data name="InvalidCode_Label" xml:space="preserve">
    <value>Enter a valid code</value>
  </data>
  <data name="InvalidMail_Label" xml:space="preserve">
    <value>Invalid mail (ex: name@domain.com)</value>
  </data>
  <data name="InvalidPassword_Label" xml:space="preserve">
    <value>Invalid password (8-32 characters, 1 number)</value>
  </data>
  <data name="InvalidUsername_Label" xml:space="preserve">
    <value>Invalid name (4-16 characters)</value>
  </data>
  <data name="InviteToLobby_Button" xml:space="preserve">
    <value>Invite</value>
  </data>
  <data name="Join_Button" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="LobbyCode_Title" xml:space="preserve">
    <value>Join to lobby</value>
  </data>
  <data name="Login_Button" xml:space="preserve">
    <value>Login</value>
    <comment>T</comment>
  </data>
  <data name="Login_Title" xml:space="preserve">
    <value>LogIn</value>
  </data>
  <data name="MessageReport_Label" xml:space="preserve">
    <value>The player has been reported, thanks for your contribution</value>
  </data>
  <data name="Misbehavior_Button" xml:space="preserve">
    <value>Misbehavior</value>
  </data>
  <data name="NameChange_Label" xml:space="preserve">
    <value>Name change</value>
  </data>
  <data name="Necrofiend_Label" xml:space="preserve">
    <value>Necrofiend</value>
  </data>
  <data name="Necronomicon_Label" xml:space="preserve">
    <value>Necronomicon</value>
  </data>
  <data name="NewPassword_Label" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="Nightmare_Label" xml:space="preserve">
    <value>Nightmare</value>
  </data>
  <data name="NonexistentAccount_Label" xml:space="preserve">
    <value>This account doesn´t exist</value>
  </data>
  <data name="NonexistentCode_Label" xml:space="preserve">
    <value>Code doesn't exist</value>
  </data>
  <data name="NovicePlayer_Button" xml:space="preserve">
    <value>Novice player</value>
  </data>
  <data name="OffensiveLanguage_Button" xml:space="preserve">
    <value>Offensive language</value>
  </data>
  <data name="Offline_Label" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="Online_Label" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="PasswordChanged_Title" xml:space="preserve">
    <value>Password Changed</value>
  </data>
  <data name="PlayerIdPrompt_Label" xml:space="preserve">
    <value>Insert player id</value>
  </data>
  <data name="Play_Button" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Potiontrap_Label" xml:space="preserve">
    <value>Potiontrap</value>
  </data>
  <data name="Profile_Title" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ProPlayer_Button" xml:space="preserve">
    <value>Pro player</value>
  </data>
  <data name="Register_Title" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RemoveFriendConfirmationMessage_Label" xml:space="preserve">
    <value>Are you sure you want to remove this friend?</value>
  </data>
  <data name="Remove_Button" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Report_Button" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Report_Title" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="RulesViolation_Button" xml:space="preserve">
    <value>Rules violation</value>
  </data>
  <data name="Save_Button" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Scoreboard_Title" xml:space="preserve">
    <value>Scoreboard</value>
  </data>
  <data name="SearchPlayer_Label" xml:space="preserve">
    <value>Search player</value>
  </data>
  <data name="SearchPlayer_Title" xml:space="preserve">
    <value>Search player</value>
  </data>
  <data name="ServerConnectionLostMessage_Label" xml:space="preserve">
    <value>Server connection lost, try again later</value>
  </data>
  <data name="ServerConnectionLost_Title" xml:space="preserve">
    <value>Server connection lost</value>
  </data>
  <data name="SignUpMessage_Label" xml:space="preserve">
    <value>Your account has been created</value>
  </data>
  <data name="SignUp_Button" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Soulhunter_Label" xml:space="preserve">
    <value>Soulhunter</value>
  </data>
  <data name="Stratego_Label" xml:space="preserve">
    <value>Stratego</value>
  </data>
  <data name="Toxicity_Button" xml:space="preserve">
    <value>Toxicity</value>
  </data>
  <data name="Trapbreaker_Label" xml:space="preserve">
    <value>Trapbreaker</value>
  </data>
  <data name="UseHacks_Button" xml:space="preserve">
    <value>Use of hacks</value>
  </data>
  <data name="UserMail_Label" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="UserName_Label" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UserPassword_Label" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Victories_Label" xml:space="preserve">
    <value>Victories</value>
  </data>
  <data name="Victory_Label" xml:space="preserve">
    <value>Victory</value>
  </data>
  <data name="WrongPassword_Label" xml:space="preserve">
    <value>Wrong Password</value>
  </data>
  <data name="LoginAsInvited_Button" xml:space="preserve">
    <value>Login as invited</value>
  </data>
  <data name="Friends_Button" xml:space="preserve">
    <value>Friends</value>
  </data>
  <data name="Send_Button" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Chat_Label" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="SelectProfilePicture_Title" xml:space="preserve">
    <value>Select Profile Picture</value>
  </data>
  <data name="Logout_Button" xml:space="preserve">
    <value>Logout</value>
  </data>
</root>